syntax = "proto3";

package meme;
option go_package = "/pb";

import "posts.proto";

service Feed {
  rpc Get(FeedGetRequest) returns (FeedGetResponse);
  rpc GetHeader(FeedGetHeaderRequest) returns (FeedGetHeaderResponse);
}

service Profile {
  rpc Get(ProfileGetRequest) returns (ProfileGetResponse);
}

message ProfileGetRequest {
  string id = 1;
}

message ProfileGetResponse {
  ProfileRenderer renderer = 1;
}

message ProfileRenderer {
  string id = 1;
  string name = 2;
  string avatar = 3;
  repeated Post posts = 4;
  bool isFollowing = 5;
}

message FeedGetRequest {
}

message FeedGetResponse {
  FeedRenderer renderer = 1;
}

message Post {
  string id = 1;
  string url = 9;

  string authorId = 2;
  string authorAvatar = 3;
  string authorName = 4;
  string authorUrl = 8;

  string dateDisplay = 5;

  string text = 6;
  string imageUrl = 7;

  // Likes
  bool isLiked = 10;
  int32 likesCount = 11;
  bool canLike = 12;

  // Comments
  int32 commentsCount = 13;
  CommentRenderer topComment = 14;
}

message CommentRenderer {
  string id = 1;
  string text = 2;

  string authorId = 3;
  string authorName = 4;
  string authorUrl = 5;
}

message FeedRenderer {
  repeated Post posts = 1;
  string placeholderText = 2;
}

message PostRenderer {
  Post post = 1;

  repeated CommentRenderer comments = 2;
  CommentComposerRenderer composer = 3;
  string composerPlaceholder = 4;
}

message FeedGetHeaderRequest {
}

message FeedGetHeaderResponse {
  HeaderRenderer renderer = 1;
}

message HeaderRenderer {
  string mainUrl = 1;
  string userName = 2;
  string userAvatar = 3;
  bool isAuthorized = 4;
  string logoutUrl = 5;
  string loginUrl = 6;
}

message ResolveRouteResponse {
  //Renderers renderer = 1;
}

message RelationsFollowRequest {
  string userId = 1;
}

message RelationsFollowResponse {
}

message RelationsUnfollowRequest {
  string userId = 1;
}

message RelationsUnfollowResponse {
}

service Relations {
  rpc Follow(RelationsFollowRequest) returns (RelationsFollowResponse);
  rpc Unfollow(RelationsUnfollowRequest) returns (RelationsUnfollowResponse);
}
