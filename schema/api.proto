syntax = "proto3";

package meme;

option go_package = "pb";

service API {
  rpc LoginPage(LoginPageRequest) returns (LoginPageRenderer);
  rpc PostPage(PostPageRequest) returns (PostPageRenderer);
  rpc UserPage(UserPageRequest) returns (UserPageRenderer);
  rpc Login(LoginRequest) returns (LoginRenderer);
  rpc AddPost(AddPostRequest) returns (AddPostRenderer);
  rpc GetFeed(GetFeedRequest) returns (GetFeedRenderer);
  rpc Composer(ComposerRequest) returns (ComposerRenderer);
  rpc Index(IndexRequest) returns (IndexRenderer);
  rpc Logout(LogoutRequest) returns (LogoutRenderer);
  rpc VKCallback(VKCallbackRenderer) returns (VKCallbackRenderer);
}

message ErrorRenderer {
  string error_code = 1;
  string display_text = 2;
}

message LoginRequest {
  string login = 1;
  string password = 2;
}

message LoginRenderer {
  HeaderRenderer header_renderer = 1;
}

message LogoutRequest {
}

message LogoutRenderer {
}

message LoginPageRequest {
}

message LoginPageRenderer {
  string submit_url = 1;
  string welcome_text = 2;
  string vk_url = 4;

  HeaderRenderer header_renderer = 3;
}

message PostPageRenderer {
  string id = 1;
  string text = 2;

  string userId = 3;
  string userUrl = 6;

  string currentUserId = 4;

  string postUrl = 7;

  HeaderRenderer header_renderer = 5;
}

message UserPageRenderer {
  reserved 3;

  string id = 1;

  string lastPostId = 2;
  string lastPostUrl = 6;

  string name = 4;

  HeaderRenderer header_renderer = 5;
}

message ResolveRouteRequest {
  string url = 1;
}

message ResolveRouteResponse {
  reserved 2;
  reserved "request";

  repeated string js = 1;
  string root_component = 3;
  string api_method = 4;
  string api_request = 5;
}

message PostPageRequest {
  string post_id = 1;
}

message UserPageRequest {
  string user_id = 1;
}

message Error {
  string message = 1;
}

message AddPostRequest {
  string text = 1;
}

message AddPostRenderer {
  string id = 1;
  string text = 2;
}

message GetFeedRequest {
}

message GetFeedRenderer {
  repeated PostPageRenderer posts = 1;
  HeaderRenderer header_renderer = 2;
}

message ComposerRequest {
}

message ComposerRenderer {
  string welcome_text = 1;
  HeaderRenderer header_renderer = 2;
  string unathorized_text = 3;
}

message IndexRequest {
}

message IndexRenderer {
  string text = 1;
  string feedUrl = 3;

  HeaderRenderer header_renderer = 2;
}

message HeaderRenderer {
  string currentUserId = 1;
  string currentUserName = 2;

  message Link {
    string url = 1;
    string label = 2;
  }
  repeated Link links = 3;
}

message VKCallbackRequest {
  string vk_code = 1;
}

message VKCallbackRenderer {
  HeaderRenderer header_renderer = 1;
}
