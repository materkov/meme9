// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: posts.proto

package pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ToggleLikeRequest_Action int32

const (
	ToggleLikeRequest_LIKE   ToggleLikeRequest_Action = 0
	ToggleLikeRequest_UNLIKE ToggleLikeRequest_Action = 1
)

var ToggleLikeRequest_Action_name = map[int32]string{
	0: "LIKE",
	1: "UNLIKE",
}

var ToggleLikeRequest_Action_value = map[string]int32{
	"LIKE":   0,
	"UNLIKE": 1,
}

func (x ToggleLikeRequest_Action) String() string {
	return proto.EnumName(ToggleLikeRequest_Action_name, int32(x))
}

func (ToggleLikeRequest_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b14bd1586479c33d, []int{2, 0}
}

type PostsAddRequest struct {
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (m *PostsAddRequest) Reset()         { *m = PostsAddRequest{} }
func (m *PostsAddRequest) String() string { return proto.CompactTextString(m) }
func (*PostsAddRequest) ProtoMessage()    {}
func (*PostsAddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b14bd1586479c33d, []int{0}
}
func (m *PostsAddRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PostsAddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PostsAddRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PostsAddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostsAddRequest.Merge(m, src)
}
func (m *PostsAddRequest) XXX_Size() int {
	return m.Size()
}
func (m *PostsAddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostsAddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostsAddRequest proto.InternalMessageInfo

func (m *PostsAddRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type PostsAddResponse struct {
	PostUrl string `protobuf:"bytes,1,opt,name=postUrl,proto3" json:"postUrl,omitempty"`
}

func (m *PostsAddResponse) Reset()         { *m = PostsAddResponse{} }
func (m *PostsAddResponse) String() string { return proto.CompactTextString(m) }
func (*PostsAddResponse) ProtoMessage()    {}
func (*PostsAddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b14bd1586479c33d, []int{1}
}
func (m *PostsAddResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PostsAddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PostsAddResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PostsAddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostsAddResponse.Merge(m, src)
}
func (m *PostsAddResponse) XXX_Size() int {
	return m.Size()
}
func (m *PostsAddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PostsAddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PostsAddResponse proto.InternalMessageInfo

func (m *PostsAddResponse) GetPostUrl() string {
	if m != nil {
		return m.PostUrl
	}
	return ""
}

type ToggleLikeRequest struct {
	Action ToggleLikeRequest_Action `protobuf:"varint,1,opt,name=action,proto3,enum=meme.ToggleLikeRequest_Action" json:"action,omitempty"`
	PostId string                   `protobuf:"bytes,2,opt,name=postId,proto3" json:"postId,omitempty"`
}

func (m *ToggleLikeRequest) Reset()         { *m = ToggleLikeRequest{} }
func (m *ToggleLikeRequest) String() string { return proto.CompactTextString(m) }
func (*ToggleLikeRequest) ProtoMessage()    {}
func (*ToggleLikeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b14bd1586479c33d, []int{2}
}
func (m *ToggleLikeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ToggleLikeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ToggleLikeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ToggleLikeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToggleLikeRequest.Merge(m, src)
}
func (m *ToggleLikeRequest) XXX_Size() int {
	return m.Size()
}
func (m *ToggleLikeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ToggleLikeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ToggleLikeRequest proto.InternalMessageInfo

func (m *ToggleLikeRequest) GetAction() ToggleLikeRequest_Action {
	if m != nil {
		return m.Action
	}
	return ToggleLikeRequest_LIKE
}

func (m *ToggleLikeRequest) GetPostId() string {
	if m != nil {
		return m.PostId
	}
	return ""
}

type ToggleLikeResponse struct {
	LikesCount int32 `protobuf:"varint,1,opt,name=likesCount,proto3" json:"likesCount,omitempty"`
}

func (m *ToggleLikeResponse) Reset()         { *m = ToggleLikeResponse{} }
func (m *ToggleLikeResponse) String() string { return proto.CompactTextString(m) }
func (*ToggleLikeResponse) ProtoMessage()    {}
func (*ToggleLikeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b14bd1586479c33d, []int{3}
}
func (m *ToggleLikeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ToggleLikeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ToggleLikeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ToggleLikeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToggleLikeResponse.Merge(m, src)
}
func (m *ToggleLikeResponse) XXX_Size() int {
	return m.Size()
}
func (m *ToggleLikeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ToggleLikeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ToggleLikeResponse proto.InternalMessageInfo

func (m *ToggleLikeResponse) GetLikesCount() int32 {
	if m != nil {
		return m.LikesCount
	}
	return 0
}

type AddCommentRequest struct {
	Text   string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	PostId string `protobuf:"bytes,2,opt,name=postId,proto3" json:"postId,omitempty"`
}

func (m *AddCommentRequest) Reset()         { *m = AddCommentRequest{} }
func (m *AddCommentRequest) String() string { return proto.CompactTextString(m) }
func (*AddCommentRequest) ProtoMessage()    {}
func (*AddCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b14bd1586479c33d, []int{4}
}
func (m *AddCommentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AddCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AddCommentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AddCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddCommentRequest.Merge(m, src)
}
func (m *AddCommentRequest) XXX_Size() int {
	return m.Size()
}
func (m *AddCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddCommentRequest proto.InternalMessageInfo

func (m *AddCommentRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *AddCommentRequest) GetPostId() string {
	if m != nil {
		return m.PostId
	}
	return ""
}

type AddCommentResponse struct {
}

func (m *AddCommentResponse) Reset()         { *m = AddCommentResponse{} }
func (m *AddCommentResponse) String() string { return proto.CompactTextString(m) }
func (*AddCommentResponse) ProtoMessage()    {}
func (*AddCommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b14bd1586479c33d, []int{5}
}
func (m *AddCommentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AddCommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AddCommentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AddCommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddCommentResponse.Merge(m, src)
}
func (m *AddCommentResponse) XXX_Size() int {
	return m.Size()
}
func (m *AddCommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddCommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddCommentResponse proto.InternalMessageInfo

type CommentComposerRenderer struct {
	PostId      string `protobuf:"bytes,1,opt,name=postId,proto3" json:"postId,omitempty"`
	Placeholder string `protobuf:"bytes,2,opt,name=placeholder,proto3" json:"placeholder,omitempty"`
}

func (m *CommentComposerRenderer) Reset()         { *m = CommentComposerRenderer{} }
func (m *CommentComposerRenderer) String() string { return proto.CompactTextString(m) }
func (*CommentComposerRenderer) ProtoMessage()    {}
func (*CommentComposerRenderer) Descriptor() ([]byte, []int) {
	return fileDescriptor_b14bd1586479c33d, []int{6}
}
func (m *CommentComposerRenderer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CommentComposerRenderer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CommentComposerRenderer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CommentComposerRenderer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommentComposerRenderer.Merge(m, src)
}
func (m *CommentComposerRenderer) XXX_Size() int {
	return m.Size()
}
func (m *CommentComposerRenderer) XXX_DiscardUnknown() {
	xxx_messageInfo_CommentComposerRenderer.DiscardUnknown(m)
}

var xxx_messageInfo_CommentComposerRenderer proto.InternalMessageInfo

func (m *CommentComposerRenderer) GetPostId() string {
	if m != nil {
		return m.PostId
	}
	return ""
}

func (m *CommentComposerRenderer) GetPlaceholder() string {
	if m != nil {
		return m.Placeholder
	}
	return ""
}

func init() {
	proto.RegisterEnum("meme.ToggleLikeRequest_Action", ToggleLikeRequest_Action_name, ToggleLikeRequest_Action_value)
	proto.RegisterType((*PostsAddRequest)(nil), "meme.PostsAddRequest")
	proto.RegisterType((*PostsAddResponse)(nil), "meme.PostsAddResponse")
	proto.RegisterType((*ToggleLikeRequest)(nil), "meme.ToggleLikeRequest")
	proto.RegisterType((*ToggleLikeResponse)(nil), "meme.ToggleLikeResponse")
	proto.RegisterType((*AddCommentRequest)(nil), "meme.AddCommentRequest")
	proto.RegisterType((*AddCommentResponse)(nil), "meme.AddCommentResponse")
	proto.RegisterType((*CommentComposerRenderer)(nil), "meme.CommentComposerRenderer")
}

func init() { proto.RegisterFile("posts.proto", fileDescriptor_b14bd1586479c33d) }

var fileDescriptor_b14bd1586479c33d = []byte{
	// 366 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x41, 0x6b, 0xea, 0x40,
	0x10, 0xc7, 0xb3, 0x3e, 0xcd, 0x7b, 0x6f, 0x84, 0xf7, 0x74, 0x69, 0x35, 0x48, 0x59, 0x24, 0x50,
	0xe8, 0xa1, 0xe4, 0x60, 0xa5, 0x57, 0x49, 0xa5, 0x07, 0xa9, 0x94, 0x92, 0xd6, 0x4b, 0x6f, 0xea,
	0x0e, 0x56, 0x4c, 0xb2, 0x69, 0x12, 0xa1, 0xf7, 0x7e, 0x81, 0x7e, 0xa3, 0x5e, 0x7b, 0xf4, 0xd8,
	0x63, 0xd1, 0x2f, 0x52, 0xb2, 0xd9, 0x90, 0x60, 0xb0, 0xb7, 0x9d, 0x7f, 0xfe, 0xfc, 0x66, 0xe6,
	0x3f, 0x81, 0x7a, 0x20, 0xa2, 0x38, 0xb2, 0x82, 0x50, 0xc4, 0x82, 0x56, 0x3d, 0xf4, 0xd0, 0x3c,
	0x85, 0xff, 0x77, 0x89, 0x68, 0x73, 0xee, 0xe0, 0xf3, 0x1a, 0xa3, 0x98, 0x52, 0xa8, 0xc6, 0xf8,
	0x12, 0x1b, 0xa4, 0x4b, 0xce, 0xfe, 0x3a, 0xf2, 0x6d, 0x9e, 0x43, 0x23, 0xb7, 0x45, 0x81, 0xf0,
	0x23, 0xa4, 0x06, 0xfc, 0x4e, 0x78, 0x93, 0xd0, 0x55, 0xd6, 0xac, 0x34, 0x5f, 0x09, 0x34, 0x1f,
	0xc4, 0x62, 0xe1, 0xe2, 0x78, 0xb9, 0xc2, 0x8c, 0x7b, 0x09, 0xfa, 0x74, 0x1e, 0x2f, 0x85, 0x2f,
	0xed, 0xff, 0x7a, 0xcc, 0x4a, 0x26, 0xb0, 0x4a, 0x46, 0xcb, 0x96, 0x2e, 0x47, 0xb9, 0x69, 0x0b,
	0xf4, 0x04, 0x3c, 0xe2, 0x46, 0x45, 0xb6, 0x51, 0x95, 0xc9, 0x40, 0x4f, 0x9d, 0xf4, 0x0f, 0x54,
	0xc7, 0xa3, 0x9b, 0xeb, 0x86, 0x46, 0x01, 0xf4, 0xc9, 0xad, 0x7c, 0x13, 0xb3, 0x0f, 0xb4, 0xc8,
	0x56, 0x53, 0x33, 0x00, 0x77, 0xb9, 0xc2, 0x68, 0x28, 0xd6, 0x7e, 0xba, 0x63, 0xcd, 0x29, 0x28,
	0xe6, 0x00, 0x9a, 0x36, 0xe7, 0x43, 0xe1, 0x79, 0xe8, 0xc7, 0x3f, 0x44, 0x72, 0x70, 0xac, 0x23,
	0xa0, 0x45, 0x40, 0xda, 0xd6, 0xbc, 0x87, 0xb6, 0x92, 0x86, 0xc2, 0x0b, 0x44, 0x84, 0xa1, 0x83,
	0x3e, 0xc7, 0x10, 0xc3, 0x02, 0x88, 0x14, 0x41, 0xb4, 0x0b, 0xf5, 0xc0, 0x9d, 0xce, 0xf1, 0x49,
	0xb8, 0x1c, 0x43, 0xd5, 0xa5, 0x28, 0xf5, 0xde, 0x09, 0xd4, 0xe4, 0x59, 0x68, 0x1f, 0x7e, 0xd9,
	0x9c, 0xd3, 0xe3, 0x34, 0xd2, 0xbd, 0x8b, 0x76, 0x5a, 0xfb, 0xb2, 0xca, 0x62, 0x00, 0x90, 0x27,
	0x44, 0xdb, 0x07, 0xee, 0xd1, 0x31, 0xca, 0x1f, 0x72, 0x40, 0xbe, 0x6b, 0x06, 0x28, 0xc5, 0x97,
	0x01, 0xca, 0xb1, 0x5c, 0x9d, 0x7c, 0x6c, 0x19, 0xd9, 0x6c, 0x19, 0xf9, 0xda, 0x32, 0xf2, 0xb6,
	0x63, 0xda, 0x66, 0xc7, 0xb4, 0xcf, 0x1d, 0xd3, 0x1e, 0x2b, 0xc1, 0x6c, 0xa6, 0xcb, 0x3f, 0xf5,
	0xe2, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x53, 0x69, 0x11, 0x77, 0xb8, 0x02, 0x00, 0x00,
}

func (m *PostsAddRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PostsAddRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PostsAddRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintPosts(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PostsAddResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PostsAddResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PostsAddResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PostUrl) > 0 {
		i -= len(m.PostUrl)
		copy(dAtA[i:], m.PostUrl)
		i = encodeVarintPosts(dAtA, i, uint64(len(m.PostUrl)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ToggleLikeRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ToggleLikeRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ToggleLikeRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PostId) > 0 {
		i -= len(m.PostId)
		copy(dAtA[i:], m.PostId)
		i = encodeVarintPosts(dAtA, i, uint64(len(m.PostId)))
		i--
		dAtA[i] = 0x12
	}
	if m.Action != 0 {
		i = encodeVarintPosts(dAtA, i, uint64(m.Action))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ToggleLikeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ToggleLikeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ToggleLikeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LikesCount != 0 {
		i = encodeVarintPosts(dAtA, i, uint64(m.LikesCount))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *AddCommentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AddCommentRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddCommentRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PostId) > 0 {
		i -= len(m.PostId)
		copy(dAtA[i:], m.PostId)
		i = encodeVarintPosts(dAtA, i, uint64(len(m.PostId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintPosts(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AddCommentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AddCommentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddCommentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *CommentComposerRenderer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CommentComposerRenderer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CommentComposerRenderer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Placeholder) > 0 {
		i -= len(m.Placeholder)
		copy(dAtA[i:], m.Placeholder)
		i = encodeVarintPosts(dAtA, i, uint64(len(m.Placeholder)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.PostId) > 0 {
		i -= len(m.PostId)
		copy(dAtA[i:], m.PostId)
		i = encodeVarintPosts(dAtA, i, uint64(len(m.PostId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintPosts(dAtA []byte, offset int, v uint64) int {
	offset -= sovPosts(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PostsAddRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovPosts(uint64(l))
	}
	return n
}

func (m *PostsAddResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PostUrl)
	if l > 0 {
		n += 1 + l + sovPosts(uint64(l))
	}
	return n
}

func (m *ToggleLikeRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Action != 0 {
		n += 1 + sovPosts(uint64(m.Action))
	}
	l = len(m.PostId)
	if l > 0 {
		n += 1 + l + sovPosts(uint64(l))
	}
	return n
}

func (m *ToggleLikeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LikesCount != 0 {
		n += 1 + sovPosts(uint64(m.LikesCount))
	}
	return n
}

func (m *AddCommentRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovPosts(uint64(l))
	}
	l = len(m.PostId)
	if l > 0 {
		n += 1 + l + sovPosts(uint64(l))
	}
	return n
}

func (m *AddCommentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *CommentComposerRenderer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.PostId)
	if l > 0 {
		n += 1 + l + sovPosts(uint64(l))
	}
	l = len(m.Placeholder)
	if l > 0 {
		n += 1 + l + sovPosts(uint64(l))
	}
	return n
}

func sovPosts(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPosts(x uint64) (n int) {
	return sovPosts(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PostsAddRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPosts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PostsAddRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PostsAddRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPosts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPosts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPosts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPosts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPosts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPosts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PostsAddResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPosts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PostsAddResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PostsAddResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPosts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPosts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPosts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PostUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPosts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPosts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPosts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ToggleLikeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPosts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ToggleLikeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ToggleLikeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Action", wireType)
			}
			m.Action = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPosts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Action |= ToggleLikeRequest_Action(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPosts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPosts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPosts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PostId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPosts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPosts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPosts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ToggleLikeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPosts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ToggleLikeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ToggleLikeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LikesCount", wireType)
			}
			m.LikesCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPosts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LikesCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPosts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPosts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPosts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AddCommentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPosts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AddCommentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AddCommentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPosts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPosts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPosts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPosts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPosts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPosts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PostId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPosts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPosts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPosts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AddCommentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPosts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AddCommentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AddCommentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPosts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPosts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPosts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CommentComposerRenderer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPosts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CommentComposerRenderer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CommentComposerRenderer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPosts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPosts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPosts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PostId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Placeholder", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPosts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPosts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPosts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Placeholder = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPosts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPosts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPosts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPosts(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPosts
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPosts
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPosts
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPosts
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPosts
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPosts
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPosts        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPosts          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPosts = fmt.Errorf("proto: unexpected end of group")
)
