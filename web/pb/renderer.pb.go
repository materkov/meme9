// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: renderer.proto

package pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type UniversalRenderer struct {
	// Types that are valid to be assigned to Renderer:
	//	*UniversalRenderer_ProfileRenderer
	//	*UniversalRenderer_FeedRenderer
	//	*UniversalRenderer_PostRenderer
	//	*UniversalRenderer_HeaderRenderer
	//	*UniversalRenderer_LoginPageRenderer
	Renderer isUniversalRenderer_Renderer `protobuf_oneof:"renderer"`
}

func (m *UniversalRenderer) Reset()         { *m = UniversalRenderer{} }
func (m *UniversalRenderer) String() string { return proto.CompactTextString(m) }
func (*UniversalRenderer) ProtoMessage()    {}
func (*UniversalRenderer) Descriptor() ([]byte, []int) {
	return fileDescriptor_d16f3e575eb43f94, []int{0}
}
func (m *UniversalRenderer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UniversalRenderer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UniversalRenderer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UniversalRenderer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UniversalRenderer.Merge(m, src)
}
func (m *UniversalRenderer) XXX_Size() int {
	return m.Size()
}
func (m *UniversalRenderer) XXX_DiscardUnknown() {
	xxx_messageInfo_UniversalRenderer.DiscardUnknown(m)
}

var xxx_messageInfo_UniversalRenderer proto.InternalMessageInfo

type isUniversalRenderer_Renderer interface {
	isUniversalRenderer_Renderer()
	MarshalTo([]byte) (int, error)
	Size() int
}

type UniversalRenderer_ProfileRenderer struct {
	ProfileRenderer *ProfileRenderer `protobuf:"bytes,1,opt,name=profileRenderer,proto3,oneof" json:"profileRenderer,omitempty"`
}
type UniversalRenderer_FeedRenderer struct {
	FeedRenderer *FeedRenderer `protobuf:"bytes,2,opt,name=feedRenderer,proto3,oneof" json:"feedRenderer,omitempty"`
}
type UniversalRenderer_PostRenderer struct {
	PostRenderer *PostRenderer `protobuf:"bytes,3,opt,name=postRenderer,proto3,oneof" json:"postRenderer,omitempty"`
}
type UniversalRenderer_HeaderRenderer struct {
	HeaderRenderer *HeaderRenderer `protobuf:"bytes,4,opt,name=headerRenderer,proto3,oneof" json:"headerRenderer,omitempty"`
}
type UniversalRenderer_LoginPageRenderer struct {
	LoginPageRenderer *LoginPageRenderer `protobuf:"bytes,5,opt,name=loginPageRenderer,proto3,oneof" json:"loginPageRenderer,omitempty"`
}

func (*UniversalRenderer_ProfileRenderer) isUniversalRenderer_Renderer()   {}
func (*UniversalRenderer_FeedRenderer) isUniversalRenderer_Renderer()      {}
func (*UniversalRenderer_PostRenderer) isUniversalRenderer_Renderer()      {}
func (*UniversalRenderer_HeaderRenderer) isUniversalRenderer_Renderer()    {}
func (*UniversalRenderer_LoginPageRenderer) isUniversalRenderer_Renderer() {}

func (m *UniversalRenderer) GetRenderer() isUniversalRenderer_Renderer {
	if m != nil {
		return m.Renderer
	}
	return nil
}

func (m *UniversalRenderer) GetProfileRenderer() *ProfileRenderer {
	if x, ok := m.GetRenderer().(*UniversalRenderer_ProfileRenderer); ok {
		return x.ProfileRenderer
	}
	return nil
}

func (m *UniversalRenderer) GetFeedRenderer() *FeedRenderer {
	if x, ok := m.GetRenderer().(*UniversalRenderer_FeedRenderer); ok {
		return x.FeedRenderer
	}
	return nil
}

func (m *UniversalRenderer) GetPostRenderer() *PostRenderer {
	if x, ok := m.GetRenderer().(*UniversalRenderer_PostRenderer); ok {
		return x.PostRenderer
	}
	return nil
}

func (m *UniversalRenderer) GetHeaderRenderer() *HeaderRenderer {
	if x, ok := m.GetRenderer().(*UniversalRenderer_HeaderRenderer); ok {
		return x.HeaderRenderer
	}
	return nil
}

func (m *UniversalRenderer) GetLoginPageRenderer() *LoginPageRenderer {
	if x, ok := m.GetRenderer().(*UniversalRenderer_LoginPageRenderer); ok {
		return x.LoginPageRenderer
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*UniversalRenderer) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*UniversalRenderer_ProfileRenderer)(nil),
		(*UniversalRenderer_FeedRenderer)(nil),
		(*UniversalRenderer_PostRenderer)(nil),
		(*UniversalRenderer_HeaderRenderer)(nil),
		(*UniversalRenderer_LoginPageRenderer)(nil),
	}
}

type ResolveRouteRequest struct {
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (m *ResolveRouteRequest) Reset()         { *m = ResolveRouteRequest{} }
func (m *ResolveRouteRequest) String() string { return proto.CompactTextString(m) }
func (*ResolveRouteRequest) ProtoMessage()    {}
func (*ResolveRouteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d16f3e575eb43f94, []int{1}
}
func (m *ResolveRouteRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResolveRouteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResolveRouteRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResolveRouteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolveRouteRequest.Merge(m, src)
}
func (m *ResolveRouteRequest) XXX_Size() int {
	return m.Size()
}
func (m *ResolveRouteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolveRouteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResolveRouteRequest proto.InternalMessageInfo

func (m *ResolveRouteRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func init() {
	proto.RegisterType((*UniversalRenderer)(nil), "meme.UniversalRenderer")
	proto.RegisterType((*ResolveRouteRequest)(nil), "meme.ResolveRouteRequest")
}

func init() { proto.RegisterFile("renderer.proto", fileDescriptor_d16f3e575eb43f94) }

var fileDescriptor_d16f3e575eb43f94 = []byte{
	// 315 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0x9d, 0xfe, 0x41, 0x70, 0xad, 0x0a, 0x35, 0x20, 0xa0, 0x42, 0x16, 0xea, 0x02, 0x53,
	0x87, 0xb2, 0x30, 0x21, 0xd1, 0x01, 0x22, 0xc1, 0x50, 0x59, 0xea, 0xc2, 0x96, 0xaa, 0xd7, 0x12,
	0xc9, 0xad, 0x83, 0x9d, 0xf4, 0x39, 0x78, 0x2c, 0xc6, 0x8e, 0x6c, 0xa0, 0xe4, 0x45, 0x50, 0xec,
	0x26, 0x24, 0x29, 0x5b, 0xee, 0xbe, 0xef, 0xf7, 0xe5, 0x7c, 0x07, 0x1d, 0x85, 0xab, 0x19, 0x2a,
	0x54, 0x83, 0x40, 0xc9, 0x50, 0xd2, 0xc6, 0x12, 0x97, 0xd8, 0x03, 0x2f, 0xf0, 0x87, 0xb6, 0xd3,
	0x6b, 0x09, 0xb9, 0xf0, 0x57, 0x59, 0x11, 0x48, 0x1d, 0x6a, 0x5b, 0xf4, 0xbf, 0x6b, 0xd0, 0x9d,
	0xac, 0xfc, 0x35, 0x2a, 0xed, 0x09, 0xbe, 0xcd, 0xa1, 0x0f, 0x70, 0x18, 0x28, 0x39, 0xf7, 0x05,
	0x66, 0xad, 0x73, 0xe7, 0xca, 0xb9, 0x69, 0x0d, 0x4f, 0x07, 0x69, 0xf6, 0x60, 0x5c, 0x16, 0x5d,
	0xc2, 0xab, 0x7e, 0x7a, 0x07, 0xed, 0x39, 0xe2, 0x2c, 0xe7, 0x6b, 0x86, 0xa7, 0x96, 0x7f, 0x2c,
	0x28, 0x2e, 0xe1, 0x25, 0x67, 0x4a, 0xa6, 0x13, 0xe6, 0x64, 0xbd, 0x48, 0x8e, 0x0b, 0x4a, 0x4a,
	0x16, 0x9d, 0xf4, 0x1e, 0x3a, 0x6f, 0xe8, 0xcd, 0x50, 0xe5, 0x6c, 0xc3, 0xb0, 0x27, 0x96, 0x75,
	0x4b, 0x9a, 0x4b, 0x78, 0xc5, 0x4d, 0x9f, 0xa0, 0x6b, 0x16, 0x35, 0xf6, 0x16, 0x7f, 0x0f, 0x6f,
	0x9a, 0x88, 0x33, 0x1b, 0xf1, 0x52, 0x95, 0x5d, 0xc2, 0x77, 0x99, 0x11, 0xc0, 0x7e, 0x76, 0x93,
	0xfe, 0x35, 0x1c, 0x73, 0xd4, 0x52, 0xac, 0x91, 0xcb, 0x28, 0x44, 0x8e, 0xef, 0x11, 0xea, 0x90,
	0x1e, 0x41, 0x3d, 0x52, 0xc2, 0xac, 0xf5, 0x80, 0xa7, 0x9f, 0xc3, 0x67, 0x68, 0x4e, 0x42, 0x5f,
	0x68, 0x3a, 0x82, 0x76, 0x91, 0xa0, 0x17, 0xf6, 0xdf, 0xff, 0xa4, 0xf4, 0xb6, 0x63, 0xed, 0x5c,
	0x70, 0x74, 0xf9, 0x19, 0x33, 0x67, 0x13, 0x33, 0xe7, 0x27, 0x66, 0xce, 0x47, 0xc2, 0xc8, 0x26,
	0x61, 0xe4, 0x2b, 0x61, 0xe4, 0xb5, 0x16, 0x4c, 0xa7, 0x7b, 0xe6, 0xf8, 0xb7, 0xbf, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x70, 0xa4, 0xc8, 0xa2, 0x3a, 0x02, 0x00, 0x00,
}

func (m *UniversalRenderer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UniversalRenderer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UniversalRenderer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Renderer != nil {
		{
			size := m.Renderer.Size()
			i -= size
			if _, err := m.Renderer.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *UniversalRenderer_ProfileRenderer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UniversalRenderer_ProfileRenderer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ProfileRenderer != nil {
		{
			size, err := m.ProfileRenderer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRenderer(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *UniversalRenderer_FeedRenderer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UniversalRenderer_FeedRenderer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.FeedRenderer != nil {
		{
			size, err := m.FeedRenderer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRenderer(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *UniversalRenderer_PostRenderer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UniversalRenderer_PostRenderer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.PostRenderer != nil {
		{
			size, err := m.PostRenderer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRenderer(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *UniversalRenderer_HeaderRenderer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UniversalRenderer_HeaderRenderer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.HeaderRenderer != nil {
		{
			size, err := m.HeaderRenderer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRenderer(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *UniversalRenderer_LoginPageRenderer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UniversalRenderer_LoginPageRenderer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.LoginPageRenderer != nil {
		{
			size, err := m.LoginPageRenderer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRenderer(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *ResolveRouteRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResolveRouteRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResolveRouteRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintRenderer(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintRenderer(dAtA []byte, offset int, v uint64) int {
	offset -= sovRenderer(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *UniversalRenderer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Renderer != nil {
		n += m.Renderer.Size()
	}
	return n
}

func (m *UniversalRenderer_ProfileRenderer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ProfileRenderer != nil {
		l = m.ProfileRenderer.Size()
		n += 1 + l + sovRenderer(uint64(l))
	}
	return n
}
func (m *UniversalRenderer_FeedRenderer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FeedRenderer != nil {
		l = m.FeedRenderer.Size()
		n += 1 + l + sovRenderer(uint64(l))
	}
	return n
}
func (m *UniversalRenderer_PostRenderer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PostRenderer != nil {
		l = m.PostRenderer.Size()
		n += 1 + l + sovRenderer(uint64(l))
	}
	return n
}
func (m *UniversalRenderer_HeaderRenderer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HeaderRenderer != nil {
		l = m.HeaderRenderer.Size()
		n += 1 + l + sovRenderer(uint64(l))
	}
	return n
}
func (m *UniversalRenderer_LoginPageRenderer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LoginPageRenderer != nil {
		l = m.LoginPageRenderer.Size()
		n += 1 + l + sovRenderer(uint64(l))
	}
	return n
}
func (m *ResolveRouteRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovRenderer(uint64(l))
	}
	return n
}

func sovRenderer(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRenderer(x uint64) (n int) {
	return sovRenderer(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *UniversalRenderer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRenderer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UniversalRenderer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UniversalRenderer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProfileRenderer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRenderer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRenderer
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRenderer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ProfileRenderer{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Renderer = &UniversalRenderer_ProfileRenderer{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeedRenderer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRenderer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRenderer
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRenderer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &FeedRenderer{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Renderer = &UniversalRenderer_FeedRenderer{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostRenderer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRenderer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRenderer
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRenderer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &PostRenderer{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Renderer = &UniversalRenderer_PostRenderer{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeaderRenderer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRenderer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRenderer
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRenderer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &HeaderRenderer{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Renderer = &UniversalRenderer_HeaderRenderer{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginPageRenderer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRenderer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRenderer
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRenderer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LoginPageRenderer{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Renderer = &UniversalRenderer_LoginPageRenderer{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRenderer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRenderer
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRenderer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResolveRouteRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRenderer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResolveRouteRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResolveRouteRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRenderer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRenderer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRenderer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRenderer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRenderer
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRenderer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRenderer(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRenderer
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRenderer
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRenderer
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRenderer
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRenderer
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRenderer
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRenderer        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRenderer          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRenderer = fmt.Errorf("proto: unexpected end of group")
)
