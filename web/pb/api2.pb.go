// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api2.proto

package pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ProfileGetRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *ProfileGetRequest) Reset()         { *m = ProfileGetRequest{} }
func (m *ProfileGetRequest) String() string { return proto.CompactTextString(m) }
func (*ProfileGetRequest) ProtoMessage()    {}
func (*ProfileGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_592802a36db5ccc7, []int{0}
}
func (m *ProfileGetRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProfileGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProfileGetRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProfileGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileGetRequest.Merge(m, src)
}
func (m *ProfileGetRequest) XXX_Size() int {
	return m.Size()
}
func (m *ProfileGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileGetRequest proto.InternalMessageInfo

func (m *ProfileGetRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ProfileGetResponse struct {
	Renderer *ProfileRenderer `protobuf:"bytes,1,opt,name=renderer,proto3" json:"renderer,omitempty"`
}

func (m *ProfileGetResponse) Reset()         { *m = ProfileGetResponse{} }
func (m *ProfileGetResponse) String() string { return proto.CompactTextString(m) }
func (*ProfileGetResponse) ProtoMessage()    {}
func (*ProfileGetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_592802a36db5ccc7, []int{1}
}
func (m *ProfileGetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProfileGetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProfileGetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProfileGetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileGetResponse.Merge(m, src)
}
func (m *ProfileGetResponse) XXX_Size() int {
	return m.Size()
}
func (m *ProfileGetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileGetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileGetResponse proto.InternalMessageInfo

func (m *ProfileGetResponse) GetRenderer() *ProfileRenderer {
	if m != nil {
		return m.Renderer
	}
	return nil
}

type ProfileRenderer struct {
	Id     string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar string  `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Posts  []*Post `protobuf:"bytes,4,rep,name=posts,proto3" json:"posts,omitempty"`
}

func (m *ProfileRenderer) Reset()         { *m = ProfileRenderer{} }
func (m *ProfileRenderer) String() string { return proto.CompactTextString(m) }
func (*ProfileRenderer) ProtoMessage()    {}
func (*ProfileRenderer) Descriptor() ([]byte, []int) {
	return fileDescriptor_592802a36db5ccc7, []int{2}
}
func (m *ProfileRenderer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProfileRenderer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProfileRenderer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProfileRenderer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileRenderer.Merge(m, src)
}
func (m *ProfileRenderer) XXX_Size() int {
	return m.Size()
}
func (m *ProfileRenderer) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileRenderer.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileRenderer proto.InternalMessageInfo

func (m *ProfileRenderer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ProfileRenderer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProfileRenderer) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *ProfileRenderer) GetPosts() []*Post {
	if m != nil {
		return m.Posts
	}
	return nil
}

type FeedGetRequest struct {
}

func (m *FeedGetRequest) Reset()         { *m = FeedGetRequest{} }
func (m *FeedGetRequest) String() string { return proto.CompactTextString(m) }
func (*FeedGetRequest) ProtoMessage()    {}
func (*FeedGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_592802a36db5ccc7, []int{3}
}
func (m *FeedGetRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FeedGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FeedGetRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FeedGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedGetRequest.Merge(m, src)
}
func (m *FeedGetRequest) XXX_Size() int {
	return m.Size()
}
func (m *FeedGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FeedGetRequest proto.InternalMessageInfo

type FeedGetResponse struct {
	Renderer *FeedRenderer `protobuf:"bytes,1,opt,name=renderer,proto3" json:"renderer,omitempty"`
}

func (m *FeedGetResponse) Reset()         { *m = FeedGetResponse{} }
func (m *FeedGetResponse) String() string { return proto.CompactTextString(m) }
func (*FeedGetResponse) ProtoMessage()    {}
func (*FeedGetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_592802a36db5ccc7, []int{4}
}
func (m *FeedGetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FeedGetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FeedGetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FeedGetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedGetResponse.Merge(m, src)
}
func (m *FeedGetResponse) XXX_Size() int {
	return m.Size()
}
func (m *FeedGetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedGetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FeedGetResponse proto.InternalMessageInfo

func (m *FeedGetResponse) GetRenderer() *FeedRenderer {
	if m != nil {
		return m.Renderer
	}
	return nil
}

type Post struct {
	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AuthorId     string `protobuf:"bytes,2,opt,name=authorId,proto3" json:"authorId,omitempty"`
	AuthorAvatar string `protobuf:"bytes,3,opt,name=authorAvatar,proto3" json:"authorAvatar,omitempty"`
	AuthorName   string `protobuf:"bytes,4,opt,name=authorName,proto3" json:"authorName,omitempty"`
	AuthorUrl    string `protobuf:"bytes,8,opt,name=authorUrl,proto3" json:"authorUrl,omitempty"`
	DateDisplay  string `protobuf:"bytes,5,opt,name=dateDisplay,proto3" json:"dateDisplay,omitempty"`
	Text         string `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	ImageUrl     string `protobuf:"bytes,7,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
}

func (m *Post) Reset()         { *m = Post{} }
func (m *Post) String() string { return proto.CompactTextString(m) }
func (*Post) ProtoMessage()    {}
func (*Post) Descriptor() ([]byte, []int) {
	return fileDescriptor_592802a36db5ccc7, []int{5}
}
func (m *Post) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Post) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Post.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Post) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Post.Merge(m, src)
}
func (m *Post) XXX_Size() int {
	return m.Size()
}
func (m *Post) XXX_DiscardUnknown() {
	xxx_messageInfo_Post.DiscardUnknown(m)
}

var xxx_messageInfo_Post proto.InternalMessageInfo

func (m *Post) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Post) GetAuthorId() string {
	if m != nil {
		return m.AuthorId
	}
	return ""
}

func (m *Post) GetAuthorAvatar() string {
	if m != nil {
		return m.AuthorAvatar
	}
	return ""
}

func (m *Post) GetAuthorName() string {
	if m != nil {
		return m.AuthorName
	}
	return ""
}

func (m *Post) GetAuthorUrl() string {
	if m != nil {
		return m.AuthorUrl
	}
	return ""
}

func (m *Post) GetDateDisplay() string {
	if m != nil {
		return m.DateDisplay
	}
	return ""
}

func (m *Post) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Post) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

type FeedRenderer struct {
	Posts []*Post `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`
}

func (m *FeedRenderer) Reset()         { *m = FeedRenderer{} }
func (m *FeedRenderer) String() string { return proto.CompactTextString(m) }
func (*FeedRenderer) ProtoMessage()    {}
func (*FeedRenderer) Descriptor() ([]byte, []int) {
	return fileDescriptor_592802a36db5ccc7, []int{6}
}
func (m *FeedRenderer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FeedRenderer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FeedRenderer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FeedRenderer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedRenderer.Merge(m, src)
}
func (m *FeedRenderer) XXX_Size() int {
	return m.Size()
}
func (m *FeedRenderer) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedRenderer.DiscardUnknown(m)
}

var xxx_messageInfo_FeedRenderer proto.InternalMessageInfo

func (m *FeedRenderer) GetPosts() []*Post {
	if m != nil {
		return m.Posts
	}
	return nil
}

type PostRenderer struct {
	Post *Post `protobuf:"bytes,1,opt,name=post,proto3" json:"post,omitempty"`
}

func (m *PostRenderer) Reset()         { *m = PostRenderer{} }
func (m *PostRenderer) String() string { return proto.CompactTextString(m) }
func (*PostRenderer) ProtoMessage()    {}
func (*PostRenderer) Descriptor() ([]byte, []int) {
	return fileDescriptor_592802a36db5ccc7, []int{7}
}
func (m *PostRenderer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PostRenderer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PostRenderer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PostRenderer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostRenderer.Merge(m, src)
}
func (m *PostRenderer) XXX_Size() int {
	return m.Size()
}
func (m *PostRenderer) XXX_DiscardUnknown() {
	xxx_messageInfo_PostRenderer.DiscardUnknown(m)
}

var xxx_messageInfo_PostRenderer proto.InternalMessageInfo

func (m *PostRenderer) GetPost() *Post {
	if m != nil {
		return m.Post
	}
	return nil
}

type PostPageResponse struct {
	Renderer *PostRenderer `protobuf:"bytes,1,opt,name=renderer,proto3" json:"renderer,omitempty"`
}

func (m *PostPageResponse) Reset()         { *m = PostPageResponse{} }
func (m *PostPageResponse) String() string { return proto.CompactTextString(m) }
func (*PostPageResponse) ProtoMessage()    {}
func (*PostPageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_592802a36db5ccc7, []int{8}
}
func (m *PostPageResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PostPageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PostPageResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PostPageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostPageResponse.Merge(m, src)
}
func (m *PostPageResponse) XXX_Size() int {
	return m.Size()
}
func (m *PostPageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PostPageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PostPageResponse proto.InternalMessageInfo

func (m *PostPageResponse) GetRenderer() *PostRenderer {
	if m != nil {
		return m.Renderer
	}
	return nil
}

type FeedGetHeaderRequest struct {
}

func (m *FeedGetHeaderRequest) Reset()         { *m = FeedGetHeaderRequest{} }
func (m *FeedGetHeaderRequest) String() string { return proto.CompactTextString(m) }
func (*FeedGetHeaderRequest) ProtoMessage()    {}
func (*FeedGetHeaderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_592802a36db5ccc7, []int{9}
}
func (m *FeedGetHeaderRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FeedGetHeaderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FeedGetHeaderRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FeedGetHeaderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedGetHeaderRequest.Merge(m, src)
}
func (m *FeedGetHeaderRequest) XXX_Size() int {
	return m.Size()
}
func (m *FeedGetHeaderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedGetHeaderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FeedGetHeaderRequest proto.InternalMessageInfo

type FeedGetHeaderResponse struct {
	Renderer *HeaderRenderer `protobuf:"bytes,1,opt,name=renderer,proto3" json:"renderer,omitempty"`
}

func (m *FeedGetHeaderResponse) Reset()         { *m = FeedGetHeaderResponse{} }
func (m *FeedGetHeaderResponse) String() string { return proto.CompactTextString(m) }
func (*FeedGetHeaderResponse) ProtoMessage()    {}
func (*FeedGetHeaderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_592802a36db5ccc7, []int{10}
}
func (m *FeedGetHeaderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FeedGetHeaderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FeedGetHeaderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FeedGetHeaderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeedGetHeaderResponse.Merge(m, src)
}
func (m *FeedGetHeaderResponse) XXX_Size() int {
	return m.Size()
}
func (m *FeedGetHeaderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FeedGetHeaderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FeedGetHeaderResponse proto.InternalMessageInfo

func (m *FeedGetHeaderResponse) GetRenderer() *HeaderRenderer {
	if m != nil {
		return m.Renderer
	}
	return nil
}

type HeaderRenderer struct {
	MainUrl      string `protobuf:"bytes,1,opt,name=mainUrl,proto3" json:"mainUrl,omitempty"`
	UserName     string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	UserAvatar   string `protobuf:"bytes,3,opt,name=userAvatar,proto3" json:"userAvatar,omitempty"`
	IsAuthorized bool   `protobuf:"varint,4,opt,name=isAuthorized,proto3" json:"isAuthorized,omitempty"`
	LogoutUrl    string `protobuf:"bytes,5,opt,name=logoutUrl,proto3" json:"logoutUrl,omitempty"`
}

func (m *HeaderRenderer) Reset()         { *m = HeaderRenderer{} }
func (m *HeaderRenderer) String() string { return proto.CompactTextString(m) }
func (*HeaderRenderer) ProtoMessage()    {}
func (*HeaderRenderer) Descriptor() ([]byte, []int) {
	return fileDescriptor_592802a36db5ccc7, []int{11}
}
func (m *HeaderRenderer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HeaderRenderer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HeaderRenderer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HeaderRenderer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeaderRenderer.Merge(m, src)
}
func (m *HeaderRenderer) XXX_Size() int {
	return m.Size()
}
func (m *HeaderRenderer) XXX_DiscardUnknown() {
	xxx_messageInfo_HeaderRenderer.DiscardUnknown(m)
}

var xxx_messageInfo_HeaderRenderer proto.InternalMessageInfo

func (m *HeaderRenderer) GetMainUrl() string {
	if m != nil {
		return m.MainUrl
	}
	return ""
}

func (m *HeaderRenderer) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *HeaderRenderer) GetUserAvatar() string {
	if m != nil {
		return m.UserAvatar
	}
	return ""
}

func (m *HeaderRenderer) GetIsAuthorized() bool {
	if m != nil {
		return m.IsAuthorized
	}
	return false
}

func (m *HeaderRenderer) GetLogoutUrl() string {
	if m != nil {
		return m.LogoutUrl
	}
	return ""
}

type ResolveRouteResponse struct {
}

func (m *ResolveRouteResponse) Reset()         { *m = ResolveRouteResponse{} }
func (m *ResolveRouteResponse) String() string { return proto.CompactTextString(m) }
func (*ResolveRouteResponse) ProtoMessage()    {}
func (*ResolveRouteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_592802a36db5ccc7, []int{12}
}
func (m *ResolveRouteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResolveRouteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResolveRouteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResolveRouteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolveRouteResponse.Merge(m, src)
}
func (m *ResolveRouteResponse) XXX_Size() int {
	return m.Size()
}
func (m *ResolveRouteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolveRouteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResolveRouteResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ProfileGetRequest)(nil), "meme.ProfileGetRequest")
	proto.RegisterType((*ProfileGetResponse)(nil), "meme.ProfileGetResponse")
	proto.RegisterType((*ProfileRenderer)(nil), "meme.ProfileRenderer")
	proto.RegisterType((*FeedGetRequest)(nil), "meme.FeedGetRequest")
	proto.RegisterType((*FeedGetResponse)(nil), "meme.FeedGetResponse")
	proto.RegisterType((*Post)(nil), "meme.Post")
	proto.RegisterType((*FeedRenderer)(nil), "meme.FeedRenderer")
	proto.RegisterType((*PostRenderer)(nil), "meme.PostRenderer")
	proto.RegisterType((*PostPageResponse)(nil), "meme.PostPageResponse")
	proto.RegisterType((*FeedGetHeaderRequest)(nil), "meme.FeedGetHeaderRequest")
	proto.RegisterType((*FeedGetHeaderResponse)(nil), "meme.FeedGetHeaderResponse")
	proto.RegisterType((*HeaderRenderer)(nil), "meme.HeaderRenderer")
	proto.RegisterType((*ResolveRouteResponse)(nil), "meme.ResolveRouteResponse")
}

func init() { proto.RegisterFile("api2.proto", fileDescriptor_592802a36db5ccc7) }

var fileDescriptor_592802a36db5ccc7 = []byte{
	// 552 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x8e, 0x13, 0x37, 0x3f, 0x93, 0x28, 0x2d, 0xab, 0xa4, 0x58, 0xa1, 0xb2, 0x22, 0x73, 0xe9,
	0x29, 0x2a, 0xe1, 0xc2, 0x35, 0xa5, 0x22, 0xf4, 0x82, 0x2a, 0x4b, 0x5c, 0xb8, 0x6d, 0xe5, 0x21,
	0x58, 0x4a, 0xb2, 0xc6, 0xbb, 0xae, 0x80, 0x13, 0x8f, 0xc0, 0x63, 0xf0, 0x28, 0x1c, 0x7b, 0xe4,
	0x88, 0x12, 0x89, 0xe7, 0x40, 0xfb, 0x63, 0x7b, 0x1d, 0x17, 0xf5, 0xb6, 0xdf, 0xf7, 0x8d, 0x77,
	0x66, 0xbe, 0x19, 0x2f, 0x00, 0x4d, 0xe2, 0xf9, 0x2c, 0x49, 0x99, 0x60, 0xc4, 0xdd, 0xe0, 0x06,
	0x83, 0xe7, 0xf0, 0xe4, 0x26, 0x65, 0x1f, 0xe3, 0x35, 0x2e, 0x51, 0x84, 0xf8, 0x39, 0x43, 0x2e,
	0xc8, 0x10, 0x9a, 0x71, 0xe4, 0x39, 0x53, 0xe7, 0xbc, 0x17, 0x36, 0xe3, 0x28, 0x58, 0x02, 0xb1,
	0x83, 0x78, 0xc2, 0xb6, 0x1c, 0xc9, 0x0b, 0xe8, 0xa6, 0xb8, 0x8d, 0x30, 0xc5, 0x54, 0xc5, 0xf6,
	0xe7, 0xe3, 0x99, 0xbc, 0x73, 0x66, 0x62, 0x43, 0x23, 0x86, 0x45, 0x58, 0xc0, 0xe0, 0xf8, 0x40,
	0x3c, 0xcc, 0x45, 0x08, 0xb8, 0x5b, 0xba, 0x41, 0xaf, 0xa9, 0x18, 0x75, 0x26, 0xa7, 0xd0, 0xa6,
	0x77, 0x54, 0xd0, 0xd4, 0x6b, 0x29, 0xd6, 0x20, 0x32, 0x85, 0xa3, 0x84, 0x71, 0xc1, 0x3d, 0x77,
	0xda, 0x3a, 0xef, 0xcf, 0xc1, 0xa4, 0x67, 0x5c, 0x84, 0x5a, 0x08, 0x4e, 0x60, 0xf8, 0x06, 0x31,
	0x2a, 0x7b, 0x0b, 0x16, 0x70, 0x5c, 0x30, 0xa6, 0x91, 0x59, 0xad, 0x11, 0xa2, 0x6f, 0x92, 0x81,
	0x0f, 0x74, 0xf1, 0xd7, 0x01, 0x57, 0x26, 0xa9, 0xd5, 0x3e, 0x81, 0x2e, 0xcd, 0xc4, 0x27, 0x96,
	0x5e, 0x47, 0xa6, 0xfe, 0x02, 0x93, 0x00, 0x06, 0xfa, 0xbc, 0xb0, 0x3b, 0xa9, 0x70, 0xc4, 0x07,
	0xd0, 0xf8, 0x9d, 0x74, 0xc0, 0x55, 0x11, 0x16, 0x43, 0xce, 0xa0, 0xa7, 0xd1, 0xfb, 0x74, 0xed,
	0x75, 0x95, 0x5c, 0x12, 0x64, 0x0a, 0xfd, 0x88, 0x0a, 0xbc, 0x8a, 0x79, 0xb2, 0xa6, 0x5f, 0xbd,
	0x23, 0xa5, 0xdb, 0x94, 0xf4, 0x56, 0xe0, 0x17, 0xe1, 0xb5, 0xb5, 0xb7, 0xf2, 0x2c, 0x6b, 0x8e,
	0x37, 0x74, 0x85, 0xf2, 0xca, 0x8e, 0xae, 0x39, 0xc7, 0xc1, 0x05, 0x0c, 0x6c, 0x0b, 0x4a, 0xbf,
	0x9d, 0xff, 0xf9, 0x3d, 0x83, 0x81, 0x82, 0xf9, 0x17, 0x3e, 0xb8, 0x52, 0x30, 0xb6, 0xda, 0x1f,
	0x28, 0x3e, 0xb8, 0x84, 0x13, 0x89, 0x6e, 0xe8, 0x0a, 0x1f, 0x1f, 0x87, 0x7d, 0xb3, 0x35, 0x8e,
	0x53, 0x18, 0x99, 0x89, 0xbe, 0x45, 0x1a, 0x61, 0x9a, 0x4f, 0xfa, 0x1a, 0xc6, 0x07, 0xbc, 0x49,
	0x70, 0x51, 0x4b, 0x30, 0xd2, 0x09, 0xf2, 0xb8, 0x5a, 0x8a, 0x9f, 0x0e, 0x0c, 0xab, 0x22, 0xf1,
	0xa0, 0xb3, 0xa1, 0xf1, 0x56, 0xda, 0xa6, 0x17, 0x20, 0x87, 0xd2, 0xd1, 0x8c, 0xa3, 0x9e, 0xa1,
	0xd9, 0x82, 0x1c, 0xcb, 0x09, 0xcb, 0x73, 0x65, 0x07, 0x2c, 0x46, 0x6e, 0x49, 0xcc, 0x17, 0x6a,
	0xa4, 0xf1, 0x37, 0x8c, 0xd4, 0x0e, 0x74, 0xc3, 0x0a, 0x27, 0xb7, 0x60, 0xcd, 0x56, 0x2c, 0x13,
	0x32, 0xb7, 0x9e, 0x72, 0x49, 0x48, 0x37, 0x42, 0xe4, 0x6c, 0x7d, 0x87, 0x21, 0xcb, 0x44, 0xe1,
	0xea, 0xfc, 0xbb, 0x03, 0xae, 0xb4, 0x83, 0xcc, 0xa1, 0xb5, 0x44, 0x41, 0x46, 0xe5, 0x8a, 0x97,
	0x7f, 0xc7, 0x64, 0x7c, 0xc0, 0x1a, 0xc7, 0xae, 0xa0, 0x57, 0xd8, 0x48, 0x26, 0x95, 0x98, 0x8a,
	0xe7, 0x93, 0x67, 0x0f, 0x6a, 0xa6, 0x84, 0xd7, 0xd0, 0x31, 0x7f, 0x3f, 0x79, 0xa5, 0x8b, 0x78,
	0x5a, 0x79, 0x30, 0xac, 0x3a, 0xbc, 0xba, 0xa0, 0x2f, 0xb9, 0x3c, 0xfb, 0xb5, 0xf3, 0x9d, 0xfb,
	0x9d, 0xef, 0xfc, 0xd9, 0xf9, 0xce, 0x8f, 0xbd, 0xdf, 0xb8, 0xdf, 0xfb, 0x8d, 0xdf, 0x7b, 0xbf,
	0xf1, 0xa1, 0x99, 0xdc, 0xde, 0xb6, 0xd5, 0xdb, 0xf6, 0xf2, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x7c, 0x8e, 0x1f, 0xb3, 0xe9, 0x04, 0x00, 0x00,
}

func (m *ProfileGetRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProfileGetRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProfileGetRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintApi2(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProfileGetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProfileGetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProfileGetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Renderer != nil {
		{
			size, err := m.Renderer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProfileRenderer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProfileRenderer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProfileRenderer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Posts) > 0 {
		for iNdEx := len(m.Posts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Posts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Avatar) > 0 {
		i -= len(m.Avatar)
		copy(dAtA[i:], m.Avatar)
		i = encodeVarintApi2(dAtA, i, uint64(len(m.Avatar)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintApi2(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintApi2(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *FeedGetRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FeedGetRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FeedGetRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *FeedGetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FeedGetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FeedGetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Renderer != nil {
		{
			size, err := m.Renderer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Post) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Post) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Post) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AuthorUrl) > 0 {
		i -= len(m.AuthorUrl)
		copy(dAtA[i:], m.AuthorUrl)
		i = encodeVarintApi2(dAtA, i, uint64(len(m.AuthorUrl)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.ImageUrl) > 0 {
		i -= len(m.ImageUrl)
		copy(dAtA[i:], m.ImageUrl)
		i = encodeVarintApi2(dAtA, i, uint64(len(m.ImageUrl)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintApi2(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.DateDisplay) > 0 {
		i -= len(m.DateDisplay)
		copy(dAtA[i:], m.DateDisplay)
		i = encodeVarintApi2(dAtA, i, uint64(len(m.DateDisplay)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.AuthorName) > 0 {
		i -= len(m.AuthorName)
		copy(dAtA[i:], m.AuthorName)
		i = encodeVarintApi2(dAtA, i, uint64(len(m.AuthorName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.AuthorAvatar) > 0 {
		i -= len(m.AuthorAvatar)
		copy(dAtA[i:], m.AuthorAvatar)
		i = encodeVarintApi2(dAtA, i, uint64(len(m.AuthorAvatar)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AuthorId) > 0 {
		i -= len(m.AuthorId)
		copy(dAtA[i:], m.AuthorId)
		i = encodeVarintApi2(dAtA, i, uint64(len(m.AuthorId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintApi2(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *FeedRenderer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FeedRenderer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FeedRenderer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Posts) > 0 {
		for iNdEx := len(m.Posts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Posts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApi2(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *PostRenderer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PostRenderer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PostRenderer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Post != nil {
		{
			size, err := m.Post.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PostPageResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PostPageResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PostPageResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Renderer != nil {
		{
			size, err := m.Renderer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *FeedGetHeaderRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FeedGetHeaderRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FeedGetHeaderRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *FeedGetHeaderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FeedGetHeaderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FeedGetHeaderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Renderer != nil {
		{
			size, err := m.Renderer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApi2(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *HeaderRenderer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HeaderRenderer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HeaderRenderer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LogoutUrl) > 0 {
		i -= len(m.LogoutUrl)
		copy(dAtA[i:], m.LogoutUrl)
		i = encodeVarintApi2(dAtA, i, uint64(len(m.LogoutUrl)))
		i--
		dAtA[i] = 0x2a
	}
	if m.IsAuthorized {
		i--
		if m.IsAuthorized {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if len(m.UserAvatar) > 0 {
		i -= len(m.UserAvatar)
		copy(dAtA[i:], m.UserAvatar)
		i = encodeVarintApi2(dAtA, i, uint64(len(m.UserAvatar)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.UserName) > 0 {
		i -= len(m.UserName)
		copy(dAtA[i:], m.UserName)
		i = encodeVarintApi2(dAtA, i, uint64(len(m.UserName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MainUrl) > 0 {
		i -= len(m.MainUrl)
		copy(dAtA[i:], m.MainUrl)
		i = encodeVarintApi2(dAtA, i, uint64(len(m.MainUrl)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ResolveRouteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResolveRouteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResolveRouteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintApi2(dAtA []byte, offset int, v uint64) int {
	offset -= sovApi2(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ProfileGetRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovApi2(uint64(l))
	}
	return n
}

func (m *ProfileGetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Renderer != nil {
		l = m.Renderer.Size()
		n += 1 + l + sovApi2(uint64(l))
	}
	return n
}

func (m *ProfileRenderer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovApi2(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovApi2(uint64(l))
	}
	l = len(m.Avatar)
	if l > 0 {
		n += 1 + l + sovApi2(uint64(l))
	}
	if len(m.Posts) > 0 {
		for _, e := range m.Posts {
			l = e.Size()
			n += 1 + l + sovApi2(uint64(l))
		}
	}
	return n
}

func (m *FeedGetRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *FeedGetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Renderer != nil {
		l = m.Renderer.Size()
		n += 1 + l + sovApi2(uint64(l))
	}
	return n
}

func (m *Post) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovApi2(uint64(l))
	}
	l = len(m.AuthorId)
	if l > 0 {
		n += 1 + l + sovApi2(uint64(l))
	}
	l = len(m.AuthorAvatar)
	if l > 0 {
		n += 1 + l + sovApi2(uint64(l))
	}
	l = len(m.AuthorName)
	if l > 0 {
		n += 1 + l + sovApi2(uint64(l))
	}
	l = len(m.DateDisplay)
	if l > 0 {
		n += 1 + l + sovApi2(uint64(l))
	}
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovApi2(uint64(l))
	}
	l = len(m.ImageUrl)
	if l > 0 {
		n += 1 + l + sovApi2(uint64(l))
	}
	l = len(m.AuthorUrl)
	if l > 0 {
		n += 1 + l + sovApi2(uint64(l))
	}
	return n
}

func (m *FeedRenderer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Posts) > 0 {
		for _, e := range m.Posts {
			l = e.Size()
			n += 1 + l + sovApi2(uint64(l))
		}
	}
	return n
}

func (m *PostRenderer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Post != nil {
		l = m.Post.Size()
		n += 1 + l + sovApi2(uint64(l))
	}
	return n
}

func (m *PostPageResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Renderer != nil {
		l = m.Renderer.Size()
		n += 1 + l + sovApi2(uint64(l))
	}
	return n
}

func (m *FeedGetHeaderRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *FeedGetHeaderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Renderer != nil {
		l = m.Renderer.Size()
		n += 1 + l + sovApi2(uint64(l))
	}
	return n
}

func (m *HeaderRenderer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MainUrl)
	if l > 0 {
		n += 1 + l + sovApi2(uint64(l))
	}
	l = len(m.UserName)
	if l > 0 {
		n += 1 + l + sovApi2(uint64(l))
	}
	l = len(m.UserAvatar)
	if l > 0 {
		n += 1 + l + sovApi2(uint64(l))
	}
	if m.IsAuthorized {
		n += 2
	}
	l = len(m.LogoutUrl)
	if l > 0 {
		n += 1 + l + sovApi2(uint64(l))
	}
	return n
}

func (m *ResolveRouteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovApi2(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozApi2(x uint64) (n int) {
	return sovApi2(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ProfileGetRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProfileGetRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProfileGetRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProfileGetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProfileGetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProfileGetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Renderer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Renderer == nil {
				m.Renderer = &ProfileRenderer{}
			}
			if err := m.Renderer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProfileRenderer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProfileRenderer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProfileRenderer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Avatar = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Posts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Posts = append(m.Posts, &Post{})
			if err := m.Posts[len(m.Posts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FeedGetRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FeedGetRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FeedGetRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipApi2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FeedGetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FeedGetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FeedGetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Renderer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Renderer == nil {
				m.Renderer = &FeedRenderer{}
			}
			if err := m.Renderer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Post) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Post: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Post: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthorId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorAvatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthorAvatar = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthorName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DateDisplay", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DateDisplay = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthorUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FeedRenderer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FeedRenderer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FeedRenderer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Posts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Posts = append(m.Posts, &Post{})
			if err := m.Posts[len(m.Posts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PostRenderer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PostRenderer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PostRenderer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Post", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Post == nil {
				m.Post = &Post{}
			}
			if err := m.Post.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PostPageResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PostPageResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PostPageResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Renderer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Renderer == nil {
				m.Renderer = &PostRenderer{}
			}
			if err := m.Renderer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FeedGetHeaderRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FeedGetHeaderRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FeedGetHeaderRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipApi2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FeedGetHeaderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FeedGetHeaderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FeedGetHeaderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Renderer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Renderer == nil {
				m.Renderer = &HeaderRenderer{}
			}
			if err := m.Renderer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HeaderRenderer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HeaderRenderer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HeaderRenderer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MainUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MainUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserAvatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserAvatar = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsAuthorized", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsAuthorized = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LogoutUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi2
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi2
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LogoutUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResolveRouteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi2
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResolveRouteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResolveRouteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipApi2(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthApi2
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApi2(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApi2
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi2
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApi2
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupApi2
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthApi2
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthApi2        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApi2          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupApi2 = fmt.Errorf("proto: unexpected end of group")
)
